
// uncomment for local testing
/*
buildscript{
    repositories{
        mavenCentral()
		mavenLocal()
		
	    dependencies {
            // uncomment for local testing
	        classpath 'com.github.skjolber.aotc:plugin:1.0.1'
	    }
    }
}
*/

plugins {
	id 'java'
    id "eclipse"
    id "idea"
    id 'com.github.skjolber.aotc' version '1.0.1'
}

// uncomment for local testing
// apply plugin: 'com.github.skjolber.aotc'

group='com.github.skjolber.aotc.example'
version='1.0.x-SNAPSHOT'

ext {
    junitPlatformVersion = '1.6.2'
    junitJupiterVersion  = '5.6.2'
    googleTruthVersion   = '1.0.1'
    jacksonVersion       = '2.11.0'
}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

// Tell idea to output to build/classes/main instead of /out/
idea {
    module {
        outputDir file('build/classes/main')
        testOutputDir file('build/classes/test')
    }
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }

    reports {
        html.enabled = true
    }
    
    if (project.hasProperty('aotLibrary') && Boolean.parseBoolean(aotLibrary)) {
        jvmArgs = ['-XX:AOTLibrary=./build/aotc/aotLibrary.so', '-XX:+UnlockDiagnosticVMOptions', '-XX:+UseAOTStrictLoading']
    }
}

dependencies {
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}");

    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    testCompile ("com.google.truth:truth:${googleTruthVersion}")
    testCompile ("com.google.truth.extensions:truth-java8-extension:${googleTruthVersion}")

}

repositories {
	mavenCentral()
	jcenter()
}

aotc {
    garbageCollector = 'g1' // alternatively 'default' or 'parallel'
    memory = '1024m' // extra XMX memory for the compilation command
    tiered = true // tiered compilation
    additionalCommands = files('exclude.txt') // one or more files for additional compile commands
    ignoreErrors = true // ignore errors during compilation
    captureMode = 'console' // alternatively 'console' or 'mbean'
}